{"name":"AutosuJSt","tagline":"An autosuggest control on steroids","body":"# Introduction\r\nI love challenges. Soon after I started working at a new company my PM expressed his wish for a particularly intricate feature to be included in the web application we were developing. This feature basically consisted in a JavaScript autosuggest control on steroids, which instantly got me excited since it seemed like a really cool tool to [try to] implement (actually what my PM was wishing for was some sort of Visual Studio's IntelliSense, and therefore I had to lower his expectations about it). \r\n\r\n# Challenge accepted\r\n\"Oh c'mon, yet another autosuggest control? That is nothing new in the JS world!\" I hear you say. You're right, there are literally dozens of really cool tools already implemented out there, such as jQuery's own [Autocomplete](http://jqueryui.com/autocomplete/), [typeahead.js](https://twitter.github.io/typeahead.js/), or [select2](http://ivaynberg.github.io/select2/), to mention just a few. But, even with their particular features and differences, they all work pretty much the same: provide the user with a list of possible values as she types, and allow her to select one of them. See what's missing? Select **ONE** of them.\r\n\r\n## IntelliSense wannabe\r\nIf you've used Excel, an IDE, or the console of pretty much any browser's developer tools, you know what [intelligent code completion](http://en.wikipedia.org/wiki/Intelligent_code_completion) is. I wanted my control to work similarly, providing this suggestion and autocompletion functionality not once but permanently. \r\n\r\n# Implementation\r\nSo I started looking at the peak of the mountain, wondering where the heck I could start climbing it from. I turned to Google for some inspiration to get me rolling and I found exactly what I needed. I could not believe my eyes, it was JavaScript genius [Nicholas C. Zakas](http://www.nczonline.net/) coming to my rescue, again!\r\n\r\nSeveral years back Mr. Zakas published a great article on [how to create an autosuggest Textbox with JavaScript](http://oak.cs.ucla.edu/cs144/projects/javascript/suggest1.html), followed up by parts [2](http://oak.cs.ucla.edu/cs144/projects/javascript/suggest2.html) and [3](http://oak.cs.ucla.edu/cs144/projects/javascript/suggest3.html). I started building my autosuJSt control around Nicholas' source code, so a huge deal of the credit goes to him. Thanks Nick!\r\n\r\n# Shut up already. How does it work?\r\nFirst of all I have to warn you I messed the originally-very-simple code by adding some dependencies. My bad, but I'm sure you can deal with it.\r\n\r\n# Demo","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}